@using System.Collections.Generic;
@using AccessManagementLaredo;
@using AccessManagementLaredo.HelperModels;
@using AccessManagementLaredo_App.Models;
@model AccessManagementLaredo.HelperModels.PermitRequestResidentialHelperModel;
@addTagHelper *, Kendo.Mvc
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
	List<County> countyName = (List<County>)ViewData["counties"];
	List<PrefixByCountyHelperModel> prefixesByCounty = (List<PrefixByCountyHelperModel>)ViewData["prefixesByCounty"];
	List<HighwayHelperModel> highways = (List<HighwayHelperModel>)ViewData["highways"];
	// IEnumerable<Highway> highwayCode = (IEnumerable<Highway>)ViewData["highways"];
	List<ConstructionType> constructionType = (List<ConstructionType>)ViewData["constructionTypes"];
	//IEnumerable<ConstructionType> constructionType = (IEnumerable<ConstructionType>)ViewData["constructionTypes"];
}

@* Header *************************************************************************************************************************************************** *@
<br />
<h3 class="text-center"> Create New Request</h3>
<br/>

@* ********************************************************************************************************************************************************** *@
@*															Stepper																							  *@
@* ********************************************************************************************************************************************************** *@
<kendo-stepper id="stepper" name="stepper" on-activate="onActivate">
	<steps>
		<step label="First"></step>
		<step label="Second"></step>
		<step label="Third"></step>
		<step label="Fourth"></step>
		<step label="Fifth"></step>
	</steps>
</kendo-stepper>
<br/>

@* First block - Request type selection ********************************************************************************************************************* *@
<div id="firstBlock">
	<div class="row pt-4">
		<div class="form-group col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
			<h3 for="requestTypeHeader">Select Request Type</h3>
		</div>
	</div>
	<div class="row pt-4">
		<div class="form-group col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4">
			<kendo-button id="residentialButton" class="custom-button" theme-color="ThemeColor.Primary"  on-click="selectRequestType"> Residential Request 
				<img id="residentialIcon" src="~/images/residential_icon.png" alt="Residential Icon" />
			</kendo-button>
		</div>
		<div class="form-group col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4">
			<kendo-button id="industrialButton" class="custom-button" theme-color="ThemeColor.Primary" size="ComponentSize.Large" on-click="selectRequestType"> Commercial Industrial Request
				<img id="industrialIcon" src="~/images/industrial_icon.png" alt="Industrial Icon" />
			</kendo-button>
		</div>
		<div class="form-group col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4">
			<kendo-button id="energyButton" class="custom-button" theme-color="ThemeColor.Primary" size="ComponentSize.Large" on-click="selectRequestType"> Commercial Energy Sector Request
				<img id="energyIcon" src="~/images/energy_icon.png" alt="Energy Icon" />
			</kendo-button>
		</div>
	</div>
	<br />
</div>


@* Second block - Form 1058 ********************************************************************************************************************* *@
<div id="secondBlock" hidden>
	<div class="row pt-4">
		<div class="form-group col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
			<h3 for="requestorHeader">Requestor Information</h3>
		</div>
	</div>
	<div class="row">
		<div class="form-group col-12 col-sm-12 col-md-6 col-lg-4 col-xl-4">
			<label for="firstNameLabel">First Name</label>
			<kendo-textbox id="firstNameTextBox" name="firstNameTextBox" on-change="updateAuthorizeTextBox">
			</kendo-textbox>
		</div>
		<div class="form-group col-12 col-sm-12 col-md-6 col-lg-4 col-xl-4">
			<label for="lastNameLabel">Last Name</label>
			<kendo-textbox id="lastNameTextBox" name="lastNameTextBox" on-change="updateAuthorizeTextBox">
			</kendo-textbox>
		</div>
		<div class="form-group col-12 col-sm-12 col-md-6 col-lg-4 col-xl-4">
			<label for="phoneNumberLabel">Phone Number</label>
			<kendo-textbox id="phoneNumberTextBox" name="phoneNumberTextBox">
			</kendo-textbox>
		</div>
	</div>
	<div class="row pt-3">
		<div class="form-group col-12 col-sm-6 col-md-6 col-lg-6 col-xl-6">
			<label for="mailingAddressLabel">Mailing Address</label>
			<kendo-textbox id="mailingAddressTextBox" name="mailingAddressTextBox">
			</kendo-textbox>
		</div>
		<div class="form-group col-12 col-sm-6 col-md-6 col-lg-2 col-xl-2">
			<label for="cityLabel">City</label>
			<kendo-textbox id="cityTextBox" name="cityTextBox">
			</kendo-textbox>
		</div>
		<div class="form-group col-12 col-sm-6 col-md-6 col-lg-2 col-xl-2">
			<label for="stateLabel">State</label>
			<kendo-textbox id="stateTextBox" name="stateTextBox">
			</kendo-textbox>
		</div>
		<div class="form-group col-12 col-sm-6 col-md-6 col-lg-2 col-xl-2">
			<label for="zipCodeLabel">Zip Code</label>
			<kendo-textbox id="zipCodeTextBox" name="zipCodeTextBox">
			</kendo-textbox>
		</div>
	</div>
	<div class="row pt-4">
		<div class="form-group col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
			<h3 for="requestorHeader">Roadway Information</h3>
		</div>
	</div>
	<div class="row">
		<div class="form-group col-12 col-sm-6 col-md-4 col-lg-4 col-xl-3">
			<label for="countyLabel">County</label>
			<kendo-dropdownlist id="countyDropdown" name="countyDropdown" datatextfield="Name" datavaluefield="Id" on-data-bound="fillTextboxes" on-change="fillTextboxes" bind-to=@countyName index=-1 filter="FilterType.StartsWith">
			</kendo-dropdownlist>
		</div>
		<div class="form-group col-12 col-sm-6 col-md-4 col-lg-4 col-xl-3">
			<label for="highwayPrefixLabel">Highway Prefix</label>
			<kendo-dropdownlist id="highwayPrefixDropdown" name="highwayPrefixDropdown" cascade-from="countyDropdown" cascade-from-field="CountyId" cascade-from-parent-field="Id" datatextfield="PrefixCode" datavaluefield="PrefixId" bind-to=@prefixesByCounty index=0 filter="FilterType.StartsWith">
			</kendo-dropdownlist>
		</div>
		<div class="form-group col-12 col-sm-6 col-md-4 col-lg-4 col-xl-3">
			<label for="highwayNumberLabel">Highway Number</label>
			<kendo-dropdownlist id="highwayNumberDropdown" name="highwayNumberDropdown" cascade-from="highwayPrefixDropdown" cascade-from-field="CountyPrefix" cascade-from-parent-field="CountyPrefix" datatextfield="HighwayNumber" datavaluefield="HighwayId" bind-to=@highways index=-1 filter="FilterType.StartsWith">
			</kendo-dropdownlist>
		</div>
	</div>
	<div class="row pt-4">
		<div class="form-group col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
			<h3 for="locationHeader">Location Information</h3>
		</div>
	</div>
	<div class="row">
		<div class="form-group pt-3 col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6">
			<kendo-map id="map-1" name="map-1" center="new double[] { 27.5473, -99.4842 }" zoom="11" on-click="onClickMap" style="height:400px">
				<layer-defaults>
					<map-marker>
						<tooltip>
							<popup-animation>
								<open duration="1200" effects="zoom:in" />
							</popup-animation>
						</tooltip>
					</map-marker>
				</layer-defaults>
				<markers>
					<map-marker location="new double[] { 30.268107, -97.744821 }" shape="MapMarkersShape.PinTarget">
						<tooltip content="Laredo, TX"></tooltip>
					</map-marker>
				</markers>
				<layers>
					<layer type="MapLayerType.Tile"
						   url-template="https://#= subdomain #.tile.openstreetmap.org/#= zoom #/#= x #/#= y #.png"
						   attribution="&copy; <a href='https://osm.org/copyright'>OpenStreetMap contributors</a>">
					</layer>
				</layers>
			</kendo-map>
		</div>
		<div class="row">
			<div class="form-group col-6 col-sm-6 col-md-6 col-lg-3 col-xl-3">
				<label for="latitudeLabel">Latitude</label>
				<kendo-textbox id="latitudeTextBox" name="latitudeTextBox">
				</kendo-textbox>
			</div>
			<div class="form-group col-6 col-sm-6 col-md-6 col-lg-3 col-xl-3">
				<label for="longitudeLabel">Longitude</label>
				<kendo-textbox id="longitudeTextBox" name="longitudeTextBox">
				</kendo-textbox>
			</div>
		</div>
	</div>
	<div class="row pt-4">
		<div class="form-group col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
			<h3 for="additionalHeader">Additional Information</h3>
		</div>
	</div>
	<div class="row pt-4">
		<div class="form-group col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
			<label for="constructionStartDateLabel">Estimated construction start date:</label>
		</div>
	</div>
	<div class="row">
		<div class="form-group col-12 col-sm-12 col-md-4 col-lg-3 col-xl-3">
			<kendo-datepicker id="constructionStartDateDatePicker" name="constructionStartDateDatePicker" format="MMM-dd-yyyy">
			</kendo-datepicker>
		</div>
	</div>
	<div class="row">
		<div class="form-group">
			<p>Is this parcel in current litigation with the State of Texas?</p>
		</div>
		<div class="form-group" style="display:inline">
			<kendo-radiogroup id="litigationRadio" name="litigationRadio" radio-name="radiogroup1" value="1" layout="RadioGroupLayout.Horizontal" label-position="RadioGroupLabelPosition.After">
				<kendo-radiogroup-items>
					<kendo-radiogroup-item label="Yes" value="Yes"></kendo-radiogroup-item>
					<kendo-radiogroup-item label="No" value="No"></kendo-radiogroup-item>
				</kendo-radiogroup-items>
			</kendo-radiogroup>
		</div>
	</div>
	<div class="row pt-3">
		<label>The Texas Department of Transportation, hereinafter called the State, hereby authorizes</label>
		<div style="width:250px; white-space:nowrap">
			<kendo-textbox id="authorizesTextBox" name="authorizesTextBox" readonly="true">
			</kendo-textbox>
		</div>
		<div>
			<label>hereinafter called the Permittee, to</label>
			<kendo-radiogroup id="constructRadio" name="constructRadio" radio-name="radiogroup2" value="1" layout="RadioGroupLayout.Horizontal" label-position="RadioGroupLabelPosition.After">
				<kendo-radiogroup-items>
					<kendo-radiogroup-item label="construct" value="construct"></kendo-radiogroup-item>
					<kendo-radiogroup-item label="reconstruct" value="reconstruct"></kendo-radiogroup-item>
				</kendo-radiogroup-items>
			</kendo-radiogroup>
		</div>
		<div>
			<label>a</label>
			<kendo-dropdownlist id="constructionTypesDropdown" name="constructionTypesDropdown" datatextfield="Name" datavaluefield="Id" bind-to=@constructionType index=0 filter="FilterType.StartsWith">
			</kendo-dropdownlist>
		</div>
	</div>

	<div class="row">
		<div>
			<p>This permit is subject to the Access Driveway Policy described on page 2 and the following:</p>
			<p>
				1. The undersigned hereby agrees to comply with the terms and conditions set forth in this permit for construction and maintenance of
				an access driveway on the state highway right of way.
			</p>
			<p>
				2. The Permittee represents that the design of the facilities, as shown in the attached sketch, is in accordance with the Roadway
				Design Manual, Hydraulic Design Manual and the access management standards set forth in the Access Management Manual
				(except as otherwise permitted by an approved variance).
			</p>
			<p>
				3. Construction of the driveway shall be in accordance with the attached design sketch, and is subject to inspection and approval by
				the State.
			</p>
			<p>
				4. Maintenance of facilities constructed hereunder shall be the responsibility of the Permittee, and the State reserves the right to
				require any changes, maintenance or repairs as may be necessary to provide protection of life or property on or adjacent to the
				highway. Changes in design will be made only with prior written approval of the State.
			</p>
			<p>
				5. The Permittee shall hold harmless the State and its duly appointed agents and employees against any action for personal injury or
				property damage related to the driveway permitted hereunder.
			</p>
			<p>
				6. Except for regulatory and guide signs at county roads and city streets, the Permittee shall not erect any sign on or extending over
				any portion of the highway right of way. The Permittee shall ensure that any vehicle service fixtures such as fuel pumps, vendor
				stands, or tanks shall be located at least 12 feet from the right of way line to ensure that any vehicle services from these fixtures
				will be off the highway right of way.
			</p>
			<p>
				7. The State reserves the right to require a new access driveway permit in the event of: (i) a material change in land use, driveway
				traffic volume or vehicle types using the driveway, or (ii) reconstruction or other modification of the highway facility by the State.
			</p>
			<p>
				8. The State may revoke this permit upon violation of any provision of this permit by the Permittee.
			</p>
			<p>
				9. This permit will become null and void if the above-referenced driveway facilities are not constructed within six (6) months from the
				issuance date of this permit.
			</p>
			<p>
				10. The Permittee will contact the State’s representative
			</p>
			<kendo-textbox id="stateRepNameTextBox" name="stateRepNameTextBox" readonly="true">
			</kendo-textbox>
			<p>
				telephone
			</p>
			<kendo-textbox id="stateRepPhoneTextBox" name="stateRepPhoneTextBox" readonly="true" width="300">
			</kendo-textbox>
			<p>
				at least twenty-four (24) hours prior to beginning the work authorized by this permit.
			</p>
			<p>
				11. The requesting Permittee will be provided instructions on the appeal process if this permit request is denied by the State.
			</p>
			<p>
				The undersigned hereby agrees to comply with the terms and conditions set forth in this permit for construction and maintenance of an
				access driveway on the highway right of way.
			</p>
		</div>
	</div>
	<br/>
	<div class="text-center">
		<kendo-button id="firstNextButton" theme-color="ThemeColor.Primary" size="ComponentSize.Large" on-click="firstButtonNext" data-param="nextFirst"> &nbsp;&nbsp;&nbsp; Next &nbsp;&nbsp;&nbsp; </kendo-button>
	</div>
</div>

@* Third block - Residential ********************************************************************************************************************************* *@
<div id="thirdBlockResidential" hidden>
	<div class="text-center pt-4">
		<h2>Upload your Files</h2>
	</div>
	<div id="files-upload-container" class="row pt-4">
		@* Block(s) for files upload will be added via Jquery dinamically *@
	</div>
	<div class="row">
		<div class="form-group col-12 col-sm-12 col-md-6 col-lg-11 col-xl-11">
		</div>
		<div class="form-group col-12 col-sm-12 col-md-6 col-lg-1 col-xl-1">
			<kendo-button theme-color="ThemeColor.Primary" name="addButton" on-click="addSegment"> + </kendo-button>
		</div>
	</div>

	<div class="text-center pt-4">
		<h2>Or</h2>
		<h2>use our predefined sketch</h2>
	</div>

	<div class="row pt-4">
		<div class="form-group col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
			<label for="lengthPipeLabel">1. Length of pipe required</label>
			<kendo-textbox id="lengthPipeTextbox" name="lengthPipeTextbox">
			</kendo-textbox>
		</div>
		<div class="form-group col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
			<label for="drivewayWidthLabel">2. Driveway width</label>
			<kendo-textbox id="drivewayWidthTextbox" name="drivewayWidthTextbox">
			</kendo-textbox>
		</div>
		<div class="form-group col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
			<label for="distanceDrainageLabel">3. Distance to center of drainage structure</label>
			<kendo-textbox id="distanceDrainageTextbox" name="distanceDrainageTextbox">
			</kendo-textbox>
		</div>
	</div>
	<div class="row pt-4">
		<div class="form-group col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
			<label for="distancePavementLabel">4. Distance from edge of pavement to ROW</label>
			<kendo-textbox id="distancePavementTextbox" name="distancePavementTextbox">
			</kendo-textbox>
		</div>
		<div class="form-group col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
			<label for="radius1Label">5. Radius</label>
			<kendo-textbox id="radiusOneTextbox" name="radiusOneTextbox">
			</kendo-textbox>
		</div>
		<div class="form-group col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
			<label for="radius2Label">6. Radius</label>
			<kendo-textbox id="radiusTwoTextbox" name="radiusTwoTextbox">
			</kendo-textbox>
		</div>
	</div>
	<div class="row pt-4">
		<div class="form-group col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
			<label for="drivewayPipeLabel">7. Driveway drainage pipe</label>
			<kendo-textbox id="drivewayPipeTextbox" name="drivewayPipeTextbox">
			</kendo-textbox>
		</div>
		<div class="form-group col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
			<label for="drainageStructureLabel">8. Drainage structure</label>
			<kendo-textbox id="drainageStructureTextbox" name="drainageStructureTextbox">
			</kendo-textbox>
		</div>
		<div class="form-group col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
			<label for="setBackLabel">9. Set back width at gate</label>
			<kendo-textbox id="setBackTextbox" name="setBackTextbox">
			</kendo-textbox>
		</div>
	</div>
	<div class="row pt-4">
		<div class="form-group col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
			<label for="widthROWLabel">10. Width starting at ROW</label>
			<kendo-textbox id="widthROWTextbox" name="widthROWTextbox">
			</kendo-textbox>
		</div>
		<div class="form-group col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
			<label for="throatLengthLabel">11. Throat length</label>
			<kendo-textbox id="throatLengthTextbox" name="throatLengthTextbox">
			</kendo-textbox>
		</div>
		<div class="form-group col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
		</div>
	</div>
	<div class="row pt-4">
		<img src="~/images/ResidentialSketch.png" />
	</div>
	<br />
	<div class="text-center">
		<button type="button" id="firstBackButton" class="btn btn-danger" onclick="backButtonGeneral('secondBlock')"> &nbsp;&nbsp;&nbsp; Back &nbsp;&nbsp;&nbsp; </button>
		&nbsp;
		<kendo-button id="secondNextButton" theme-color="ThemeColor.Primary" size="ComponentSize.Medium" on-click="secondButtonNext"> &nbsp;&nbsp;&nbsp; Next &nbsp;&nbsp;&nbsp; </kendo-button>
	</div>
</div>

@* Third block - Industrial ******************************************************************************************************************************* *@
<div id="thirdBlockIndustrial" hidden>
	<h5>Commerical Industrial</h5>
</div>

@* Third block - Energy *********************************************************************************************************************************** *@
<div id="thirdBlockEnergy" hidden>
	<h5>Commerical Energy</h5>
</div>

@* Fourth block (Form 1058) Review ************************************************************************************************************************** *@
<div id="fourthBlock1058" hidden>
	<br/>
	<h2>Review your Information</h2>
	<br />
	<hr />
	<br />
	<h3>Requestor Information</h3>
	<div class="col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6">
		<b class="pt-3">Name: </b>
		<label id="reviewFirstName" ></label>
		<label id="reviewLastName" ></label>
		<br />
		<b class="pt-3">Mailing Address: </b>
		<label id="reviewAddress" ></label>
		<br />
		<b class="pt-3">City, State, Zip: </b>
		<label id="reviewCity" ></label>
		<label id="reviewState" ></label>
		<label id="reviewZipCode" ></label>
		<br />
		<b class="pt-3">Phone Number: </b>
		<label id="reviewPhone" ></label>
		<br />
		<br />
		<h3>Roadway and Location Information</h3>
		<b class="pt-3">County: </b>
		<label id="reviewCounty" ></label>
		<br />
		<b class="pt-3">Roadway: </b>
		<label id="reviewRoadwayPrefix" ></label>
		<label id="reviewRoadwayNumber" ></label>
		<br />
		<b class="pt-3">Latitude: </b>
		<label id="reviewLatitude" ></label>
		<br />
		<b class="pt-3">Longitude: </b>
		<label id="reviewLongitude" ></label>
		<br />
		<br />
		<h3>Additional Information</h3>
		<b class="pt-3">Estimated construction start date: </b>
		<label id="reviewConstructionStartDate"></label>
		<b class="pt-3">Is this parcel in current litigation with the State of Texas? </b>
		<label id="reviewLitigation"></label>
		<br />
		<b class="pt-3">Construct or Reconstruct: </b>
		<label id="reviewConstructReconstruct"></label>
		<br />
		<b class="pt-3">Construction type: </b>
		<label id="reviewConstructionType"></label>
		<br />
		<br />
		<hr />
	</div>
</div>

@* Fourth block - Residential Review *********************************************************************************************************************** *@
<div id="fourthBlockResidential" hidden>
	<br />
	<br />
	<h3>Review Sketch Measurements</h3>
	<div class="row pt-4" style="max-width:65%; margin:auto">
		<img src="~/images/ResidentialSketch.png" />
	</div>
	<div class="row pt-3">
		<div class="form-group pt-4 col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
			<b>1. Length of pipe required: </b>
			<label id="reviewLengthPipe"></label>
		</div>
		<div class="form-group pt-4 col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
			<b>2. Driveway width: </b>
			<label id="reviewDrivewayWidth"></label>
		</div>
		<div class="form-group pt-4 col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
			<b>3. Distance to center of drainage structure: </b>
			<label id="reviewDistanceDrainage"></label>
		</div>
	</div>
	<div class="row">
		<div class="form-group pt-4 col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
			<b>4. Distance from edge of pavement to ROW: </b>
			<label id="reviewDistancePavement"></label>
		</div>
		<div class="form-group pt-4 col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
			<b>5. Radius: </b>
			<label id="reviewRadiusOne"></label>
		</div>
		<div class="form-group pt-4 col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
			<b>6. Radius: </b>
			<label id="reviewRadiusTwo"></label>
		</div>
	</div>
	<div class="row">
		<div class="form-group pt-4 col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
			<b>7. Driveway drainage pipe: </b>
			<label id="reviewDrivewayPipe"></label>
		</div>
		<div class="form-group pt-4 col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
			<b>8. Drainage structure: </b>
			<label id="reviewDrainageStructure"></label>
		</div>
		<div class="form-group pt-4 col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
			<b>9. Set back width at gate: </b>
			<label id="reviewSetBack"></label>
		</div>
	</div>
	<div class="row">
		<div class="form-group pt-4 col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
			<b>10. Width starting at ROW: </b>
			<label id="reviewWidthROW"></label>
		</div>
		<div class="form-group pt-4 col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
			<b>11. Throat length: </b>
			<label id="reviewThroatLength"></label>
		</div>
		<div class="form-group pt-4 col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
		</div>
	</div>
	<br />
	<br />
	<div class="row">
		<br />
		<br />
		<h4>Additional comments: </h4>
		<kendo-textarea id="commentsTextArea" name="commentsTextArea" rows="5">
		</kendo-textarea>
		<br />
	</div>
	<br />
	<div class="text-center pt-4">
		<button type="button" id="secondBackButton" class="btn btn-danger" onclick="backButtonGeneral('thirdBlockResidential')"> &nbsp;&nbsp;&nbsp; Back &nbsp;&nbsp;&nbsp; </button>
		&nbsp;
		<kendo-button id="submitButton" theme-color="ThemeColor.Primary" size="ComponentSize.Medium" on-click="buttonSubmit"> &nbsp;&nbsp;&nbsp; Submit &nbsp;&nbsp;&nbsp; </kendo-button>
	</div>
</div>

@* Fourth block - Industrial Review ***************************************************************************************************************************** *@
<div id="fourthBlockIndustrial" hidden>
</div>

@* Fourth block - Energy Review *************************************************************************************************************************** *@
<div id="fourthBlockEnergy" hidden>
</div>

@* Fifth block - Request was submitted *************************************************************************************************************************** *@
<div id="fifthBlock" hidden>
	<div class="text-center">
		<br />
		<br />
		<h3>Your application has been submitted successfully</h3>
		<br />
		<h4>
			You can track your application in the “Requests” tab.
		</h4>
		<h4>
			Your reference number is xxx-xxxx
		</h4>
		<br />
		<h5>
			Please allow x business days for review of your application.
		</h5>
		<h5>
			If you have any questions or concerns, contact us at xxx@txdot.com
		</h5>
		<br />
		<br />
		<form method="get" asp-action="Index" asp-controller="PermitRequest">
			<kendo-button type="submit" id="finishButton" theme-color="ThemeColor.Primary" size="ComponentSize.Large">&nbsp;&nbsp;&nbsp; Finish &nbsp;&nbsp;&nbsp;</kendo-button>
		</form>
	</div>
</div>

@* Dialog used to display messages (success, error) when performing CRUD operations on work order records *@
<div id="messageDialog">
</div>


@* ********************************************************************************************************************************************************** *@
@*																Javascript code																				  *@
@* ********************************************************************************************************************************************************** *@
<script>

	// Variables **************************************************************************************************************************************
	var cloneCount = 0;							// current number of file upload segments
	var cloneCountMax = 5;						// sets the updated maximum value the id of upload segments can be (this increases when upload segments are deleted)
	const cloneCountLimit = 5;					// limit of upload containers accepted in the form
	var requestTypeButtonId;
	var requestTypeName = '';
	var permitRequestId = 0;
	var permitRequestResidentialId = 0;
	var counties = [];

	@foreach (var item in countyName)
	{
		@:counties.push({
		@:Id: '@item.Id',
		@:Name: '@item.Name',
		@:Contact: '@item.Contact',
		@:});
	}

	// Document ready (when the page is loaded) *********************************************************************************************************
	$(document).ready(function () {
		// Get parameter value (request id) from URL
		var urlParams = new URLSearchParams(window.location.search);
		permitRequestId = urlParams.get('id');
		// If id param is null it means that the "New Request" button was pressed
		// If there is an id param it means the "Edit" button on a row was pressed
		if (permitRequestId != null) {
			loadPermitRequestRecord();
			showCurrentStep('secondBlock');
		} else { 
			permitRequestId = 0;
		}

		// Apply custom styles to the button using jQuery
		$('.custom-button').css({
			'max-width': '300px',
			'max-height': '150px',
			'display': 'flex',
			'flex-direction': 'column',
			'align-items': 'center',
			'justify-content': 'center'
		});

		// Apply custom styles to the image inside the button
		$('.custom-button img').css({
			'max-width': '60px',
			'max-height': '60px'
		});
	});

	// Function to show and hide each segment of the stepper ************************************************************************************************
	function onActivate(e) {
		// $("#firstBlock").attr("hidden", false);
		// $("#secondBlock").attr("hidden", true);
		// $("#thirdBlockResidential").attr("hidden", true);
		// $("#thirdBlockIndustrial").attr("hidden", true);
		// $("#thirdBlockEnergy").attr("hidden", true);
		// $("#fourthBlock1058").attr("hidden", true);
		// $("#fourthBlockResidential").attr("hidden", true);
		// $("#fourthBlockIndustrial").attr("hidden", true);
		// $("#fourthBlockEnergy").attr("hidden", true);
		// $("#fifthBlock").attr("hidden", true);

		// switch (e.step.options.label) { 
		// 	case 'First':
		// 		$("#firstBlock").attr("hidden", false);
		// 		break;
		// 	case 'Second':
		// 		$("#secondBlock").attr("hidden", false);
		// 		break;
		// 	case 'Third':
		// 		if (requestTypeButtonId == 'residentialButton') {
		// 			$("#thirdBlockResidential").attr("hidden", false);
		// 			requestTypeName = 'Residential';
		// 			// if (cloneCount == 0)
		// 			// 	addSegment(null);
		// 		}
		// 		else if (requestTypeButtonId == 'industrialButton') {
		// 			$("#thirdBlockIndustrial").attr("hidden", false);
		// 			requestTypeName = 'Industrial';
		// 		}
		// 		else if (requestTypeButtonId == 'energyButton') {
		// 			$("#thirdBlockEnergy").attr("hidden", false);
		// 			requestTypeName = 'Energy';
		// 		}
		// 		break;
		// 	case 'Fourth':
		// 		$("#fourthBlock1058").attr("hidden", false);
		// 		if (requestTypeButtonId == 'residentialButton') {
		// 			$("#fourthBlockResidential").attr("hidden", false);
		// 			requestTypeName = 'Residential';
		// 		}
		// 		else if (requestTypeButtonId == 'industrialButton') {
		// 			$("#fourthBlockIndustrial").attr("hidden", false);
		// 			requestTypeName = 'Industrial';
		// 		}
		// 		else if (requestTypeButtonId == 'energyButton') {
		// 			$("#fourthBlockEnergy").attr("hidden", false);
		// 			requestTypeName = 'Energy';
		// 		}
		// 		break;
		// 	case 'Fifth':
		// 		$("#fifthBlock").attr("hidden", false);
		// 		break;
		//}
		//alert("Activated: " + e.step.options.label);
	}

	// Function that fills the textboxes for representatives information **********************************************************************************
	function fillTextboxes(){
		var countyDropdown = $("#countyDropdown").data("kendoDropDownList");
		var result = counties.find(x => x.Id == countyDropdown.value());
		var countyName = $("#stateRepNameTextBox").data("kendoTextBox");
		var countyPhone = $("#stateRepPhoneTextBox").data("kendoTextBox");

		countyName.value(result.Name + " COUNTY MAINTENANCE SECTION SUPERVISOR");
		countyPhone.value(result.Contact);
	}

	// Function to show and hide each segment of the stepper ************************************************************************************************
	function showCurrentStep(blockName) {
		var stepper = $("#stepper").data("kendoStepper");

		// Initially hide all blocks
		$("#firstBlock").attr("hidden", true);
		$("#secondBlock").attr("hidden", true);
		$("#thirdBlockResidential").attr("hidden", true);
		$("#thirdBlockIndustrial").attr("hidden", true);
		$("#thirdBlockEnergy").attr("hidden", true);
		$("#fourthBlock1058").attr("hidden", true);
		$("#fourthBlockResidential").attr("hidden", true);
		$("#fourthBlockIndustrial").attr("hidden", true);
		$("#fourthBlockEnergy").attr("hidden", true);
		$("#fifthBlock").attr("hidden", true);

		// Show the block
		$("#" + blockName).attr("hidden", false);

		// Select the step on the stepper depending on the block that is shown
		// Default fourth block will always be shown when in 4th step regardless of request type
		switch (blockName) { 
			case "firstBlock":
				stepper.select(0);
				break;
			case "secondBlock":
				stepper.select(1);
				break;
			case "thirdBlockResidential":
				stepper.select(2);
				break;
			case "thirdBlockIndustrial":
				stepper.select(2);
				break;
			case "thirdBlockEnergy":
				stepper.select(2);
				break;
			case "fourthBlockResidential":
				$("#fourthBlock1058").attr("hidden", false);
				stepper.select(3);
				break;
			case "fourthBlockIndustrial":
				$("#fourthBlock1058").attr("hidden", false);
				stepper.select(3);
				break;
			case "fourthBlockEnergy":
				$("#fourthBlock1058").attr("hidden", false);
				stepper.select(3);
				break;
			case "fifthBlock":
				stepper.select(4);
				break;
		}

		$("html, body").animate({ scrollTop: 0 }, "slow");
	}

	// Function that sets the type of request that is chosen based on the button clicked **********************************************************************
	function selectRequestType(e) { 
		requestTypeButtonId = e.id;

		if (requestTypeButtonId == 'residentialButton') {
			requestTypeName = 'Residential';
		}
		else if (requestTypeButtonId == 'industrialButton') {
			requestTypeName = 'Industrial';
		}
		else if (requestTypeButtonId == 'energyButton') {
			requestTypeName = 'Energy';
		}

		showCurrentStep('secondBlock');
	}

	// Function that updates the value of the 'authorizes' textbox with the name entered on the first textboxes *************************************************************
	function updateAuthorizeTextBox(e) { 
		$("#authorizesTextBox").data("kendoTextBox").value($("#firstNameTextBox").data("kendoTextBox").value() + " " + $("#lastNameTextBox").data("kendoTextBox").value());
	}

	// ***********************************************************************************************************************************************************
	function x() { 
		var combinedObj;

		if (requestTypeButtonId == 'residentialButton') { 
			combinedObj = { ...GetPermitRequestData(), ...GetPermitRequestResidentialData() };
		}
	}

	// Function to select latitude and longitude by clicking on the map **********************************************************************************************
	function onClickMap(e) {
		alert(e.location.lat);
		var latitude = $('#latitudeTextBox').data("kendoTextArea");
		var longitude = $('#longitudeTextBox').data("kendoTextArea");
		var location = e.location;

		latitude.value(location.lat);
		latitude.trigger("change");
		alert(latitude.value());
		// longitude.value(location.lng);
		// longitude.trigger("change");
	}

	// Function to add a block for to upload files ******************************************************************************************************************
	// fileName argument is used to initialize Kendo Upload control *************************************************************************************************
	function addSegment(fileName) {
		// Check for maximum number of items per order
		if (cloneCount >= cloneCountMax) {
			fnShowMessage("You have reached the maximum (" + cloneCountLimit + ") number of attachments in this request", "Warning");
			return;
		}

		// Add clone count value every time a segment is going to be added
		cloneCount++;

		// Begin by creating and setting the properties of the container
		$('#files-upload-container').append('<div id="files-form-' + cloneCount + '"></div>');
        //$('#sign-form-' + cloneCount).append('<hr/ style="height:5px;background-color:black">');
        $('#files-form-' + cloneCount).append('<div id="padding-y-' + cloneCount + '" class="row py-3"></div>');

		$('#padding-y-' + cloneCount).append('<div id="left-' + cloneCount + '" class="form-group col-12 col-sm-12 col-md-6 col-lg-3 col-xl-3"></div>');
		$('#left-' + cloneCount).append('<h6>Document Type</h6>');
		createDropdown();

		$('#padding-y-' + cloneCount).append('<div id="center-' + cloneCount + '" class="form-group col-12 col-sm-12 col-md-6 col-lg-3 col-xl-3"></div>');
		$('#center-' + cloneCount).append('<h6>File</h6>');
		createUpload(fileName);

		$('#padding-y-' + cloneCount).append('<div id="right-' + cloneCount + '" class="form-group col-12 col-sm-12 col-md-10 col-lg-5 col-xl-5"></div>');
		$('#right-' + cloneCount).append('<h6>Comment</h6>');
		createTextArea();

		$('#padding-y-' + cloneCount).append('<div id="button-' + cloneCount + '" class="form-group col-12 col-sm-12 col-md-2 col-lg-1 col-xl-1"></div>');
		$('#button-' + cloneCount).append('<h6> &nbsp; </h6>');

		// Delete button only appears from the second segment (wlways must be at least one segment)
		if (cloneCount >= 2)
			createButtonDeleteFile();
	}

	// Function to create a kendo button to delete sign segment dynamically *******************************************************************************
	function createButtonDeleteFile() {
		var cloneCountAux = cloneCount;
		$('#button-' + cloneCountAux).append('<button type="button" id="remove-file-' + cloneCountAux + '"> - </button>');
		$('#remove-file-' + cloneCountAux).kendoButton({
			themeColor: "error",
			click: function (e) {
				$('#files-form-' + cloneCountAux).remove();
				cloneCountMax++;
			}
		});
	}

	// Function to create a kendo dropdown list dynamically *******************************************************************************************
	function createDropdown() {
		$('#left-' + cloneCount).append('<input id="document-type-' + cloneCount + '">');
		$('#document-type-' + cloneCount).kendoDropDownList({
			dataTextField: 'Name',
			dataValueField: 'Id',
			filter: 'startsWith',
			dataSource: {
				transport: {
					read: {
						url: 'NewRequest/GetAttachmentTypesAux',
						dataType: 'json'
					}
				}
			},
			value: null
		});
	}

	// Function to create kendo text area dynamically *************************************************************************************************
	function createTextArea() {
		$('#right-' + cloneCount).append('<textarea id="comment-' + cloneCount + '" style="height: auto;"></textarea>');
		$('#comment-' + cloneCount).kendoTextArea({
			rows: 2,
		});
	}

	// Function to create a kendo upload dynamically for file attachment *****************************************************************************
	// fileName must be of type string
	function createUpload(fileName) {
		var file = [];

		if (typeof fileName != "string")
			fileName = null;

		if (fileName != null)
			file = [{ name: fileName }];

		$('#center-' + cloneCount).append('<input id="files-' + cloneCount + '" name="files" type="file"/>');
		$('#files-' + cloneCount).kendoUpload({
			multiple: false,
			async: {
				saveUrl: '/NewRequest/SaveUploadedFile',
				removeUrl: '/NewRequest/RemoveUploadedFile',
				autoUpload: true
			},
			files: file,
			success: onUploadSuccess
		});

		// if length of array is greater than zero, it means that an image already exists (an existing record is being edited)
		if (file.length > 0) {
			onUploadSuccessAux();
		}
	}

	// Upload Control Success Event *********************************************************************************************************************
	function onUploadSuccess(e) {
		if (e.operation == "upload") {
			onUploadSuccessAux();
		}
	}

	// *************************************************************************************************************************************************
	function onUploadSuccessAux() {
		// $('.k-file-name').eq(cloneCount - 1).click(onUploadClick);
		// $('.k-file-name').eq(cloneCount - 1).mouseover(onUploadMouseOver);
		// $('.k-file-name').addClass("link-primary");
		$('#center-' + cloneCount).find('.k-widget').find('.k-upload-files').find('.k-file').find('.k-file-name-size-wrapper').find('.k-file-name').eq(0).click(onUploadClick);
		$('#center-' + cloneCount).find('.k-widget').find('.k-upload-files').find('.k-file').find('.k-file-name-size-wrapper').find('.k-file-name').eq(0).mouseover(onUploadMouseOver);
		$('#center-' + cloneCount).find('.k-widget').find('.k-upload-files').find('.k-file').find('.k-file-name-size-wrapper').find('.k-file-name').addClass("link-primary");
	}

	// Upload Control Click Event ***********************************************************************************************************************
	function onUploadClick() {
		// var imageName = $('.k-file-name').eq($('.k-file-name').index(this)).attr('title');
		// //var imageName = $('#third-row-left-' + cloneCount).find('.k-widget').find('.k-upload-files').find('.k-file').find('.k-file-name-size-wrapper').find('.k-file-name').eq($('#third-row-left-' + cloneCount).find('.k-widget').find('.k-upload-files').find('.k-file').find('.k-file-name-size-wrapper').find('.k-file-name').index(this)).attr('title');
		// var imageWindow = $('#imageWindow').data('kendoWindow');
		// imageWindow.content("<img class='img-fluid' src='/images/signs/" + imageName + "' alt='Image'>");
		// imageWindow.center();
		// imageWindow.open();
	}

	// Upload Control Mouse Over Event ******************************************************************************************************************
	function onUploadMouseOver() {
		$('.k-file-name').css('cursor', 'pointer');
		//$('#third-row-left-' + cloneCount).find('.k-widget').find('.k-upload-files').find('.k-file').find('.k-file-name-size-wrapper').find('.k-file-name').css('cursor', 'pointer');
	}

	// Calls a function when clicking the "Next" button of the second block (Form 1058) ************************************************************************
	function firstButtonNext() {
		if (requestTypeName == 'Residential') {
			residentialNextFirst();
			showCurrentStep('thirdBlockResidential');
			if (cloneCount == 0)
				addSegment(null);
		}
	}

	// Calls a function when clicking the "Next" button of the third block (specific for each request type) ***************************************************
	function secondButtonNext() {
		if (requestTypeName == 'Residential') {
			residentialNextSecond();
			showCurrentStep('fourthBlockResidential');
		}
	}

	// Calls a function when clicking the "Next" button of the third block (specific for each request type) ***************************************************
	function backButtonGeneral(blockName) { 
		showCurrentStep(blockName);
	}

	// Action that will be performed when clicking the "Next" button of the first segment **********************************************************************
	function residentialNextFirst() { 

		// if id param exists, the record will be updated instead of created
		if (permitRequestId != 0) { 
			residentialNextSecond();
			return;
		}

		// if NO id param exists, a new record will be created
		var combinedObj;
		combinedObj = { ...GetPermitRequestData(), ...GetPermitRequestResidentialData() };
		alert(JSON.stringify(combinedObj));

		$.ajax({
			type: 'POST',
			url: '/NewRequest/CreateResidential',
			contentType: 'application/json; charset=utf-8',
			data: JSON.stringify(combinedObj),
			success: function (result) {
				//fnShowMessage("Notification sent", "Success");
				permitRequestId = result.Data[0].PermitRequestId;
			},
			error: function (xhr, textStatus, errorThrown) {
				fnShowMessage(xhr.responseText, "Error");
			}
		});
	}

	// Action that will be performed when clicking the "Next" button of the second segment *************************************************************************
	function residentialNextSecond() {
		var combinedObj;
		combinedObj = { ...GetPermitRequestData(), ...GetPermitRequestResidentialData() };
		alert(JSON.stringify(combinedObj));
		$.ajax({
			type: 'POST',
			url: '/NewRequest/UpdateResidential',
			contentType: 'application/json; charset=utf-8',
			data: JSON.stringify(combinedObj),
			success: function (result) {
				//fnShowMessage("Notification sent", "Success");
			},
			error: function (xhr, textStatus, errorThrown) {
				fnShowMessage(xhr.responseText, "Error");
			},
			complete: function () { 
				residentialReview(permitRequestId);
			}
		});
	}

	//  Action performed after the sketch segment to review you information before submitting the request **********************************************************
	function residentialReview(permitRequestId) {
		var jsonResult;

		$.ajax({
			type: 'GET',
			url: '/NewRequest/ReadPermitRequests',
			contentType: 'application/json; charset=utf-8',
			data: { id: permitRequestId },
			success: function (result) {
				//fnShowMessage("Notification sent", "Success");
				jsonResult = jQuery.parseJSON(result);
			},
			error: function (xhr, textStatus, errorThrown) {
				fnShowMessage(xhr.responseText, "Error");
			},
			complete: function () {
				loadReviewPermitData(jsonResult);
			}
		});
	}

	// Action that will be performed when clicking the "Submit" button of the review segment ******************************************************************************
	function buttonSubmit(){ 
		var commentTextArea = $("#commentsTextArea").val().toString().length != 0 ? $("#commentsTextArea").val() : null;
		showCurrentStep('fifthBlock');
		$.ajax({
			type: 'POST',
			url: '/NewRequest/SubmitPermitRequest',
			data: { id: permitRequestId, comment: commentTextArea },
			success: function (result) {
				//fnShowMessage("Notification sent", "Success");
				showCurrentStep('fifthBlock');

			},
			error: function (xhr, textStatus, errorThrown) {
				fnShowMessage(xhr.responseText, "Error");
			}
		});
	}

	// Loads values from permit request table into the labels for information review step **************************************************************************
	function loadReviewPermitData(jsonResult) {
		$("#reviewFirstName").text(jsonResult[0].RequestorFirstName + ' ');
		$("#reviewLastName").text(jsonResult[0].RequestorLastName);
		$("#reviewAddress").text(jsonResult[0].RequestorAddress);
		$("#reviewCity").text(jsonResult[0].RequestorCity + ', ');
		$("#reviewState").text(jsonResult[0].RequestorState + ', ');
		$("#reviewZipCode").text(jsonResult[0].RequestorZipCode);
		$("#reviewPhone").text(jsonResult[0].RequestorPhoneNumber);
		$("#reviewCounty").text(jsonResult[0].CountyName);
		$("#reviewRoadwayPrefix").text(jsonResult[0].HighwayCode + '-');
		$("#reviewRoadwayNumber").text(jsonResult[0].HighwayNumber);
		$("#reviewLatitude").text(jsonResult[0].Latitude);
		$("#reviewLongitude").text(jsonResult[0].Longitude);
		$("#reviewConstructionStartDate").text(jsonResult[0].ConstructionStartDate);
		$("#reviewLitigation").text(jsonResult[0].LitigationFlag);
		$("#reviewConstructReconstruct").text(jsonResult[0].ConstructionFlag);
		$("#reviewConstructionType").text(jsonResult[0].ConstructionTypeName);
		//$("#reviewOtherConditions").text(jsonResult[0].OtherConditions);
		
		//jsonResult[0].VarianceOneFlag = '0' ? $("#reviewVarianceOne").text('No') : $("#reviewVarianceOne").text('Yes');
		//jsonResult[0].VarianceTwoFlag = '0' ? $("#reviewVarianceTwo").text('No') : $("#reviewVarianceTwo").text('Yes');
		
		//$("#reviewJustification").text(jsonResult[0].VarianceJustification);

		$("#reviewLengthPipe").text(jsonResult[0].PipeLength);
		$("#reviewDrivewayWidth").text(jsonResult[0].DrivewayWidth);
		$("#reviewDistanceDrainage").text(jsonResult[0].DistanceToCenter);
		$("#reviewDistancePavement").text(jsonResult[0].DistanceFromEdge);
		$("#reviewRadiusOne").text(jsonResult[0].RadiusOne);
		$("#reviewRadiusTwo").text(jsonResult[0].RadiusTwo);
		$("#reviewDrivewayPipe").text(jsonResult[0].DrainagePipe);
		$("#reviewDrainageStructure").text(jsonResult[0].DrainageStructure);
		$("#reviewSetBack").text(jsonResult[0].WidthGate);
		$("#reviewWidthROW").text(jsonResult[0].WidthROW);
		$("#reviewThroatLength").text(jsonResult[0].ThroatLength);
	}

	// Get values from controls in request form to send them for creating or updating *************************************************************
	function GetPermitRequestData(){
		var files = [];

		var currentDate = new Date();
		var day = currentDate.getDate().toString().padStart(2, '0'); 
		var month = (currentDate.getMonth() + 1).toString().padStart(2, '0');
		var year = currentDate.getFullYear();
		var formattedDate = year + '-' + month + '-' + day;

		var permitRequest = {
			PermitRequestId: parseInt(permitRequestId),
			HighwayId: parseInt($("#highwayNumberDropdown").val()),
			SubmitDate: formattedDate,
			ConstructionTypeId: parseInt($("#constructionTypesDropdown").val()),
			HighwayPrefixId: parseInt($("#highwayPrefixDropdown").val()),
			RequestType: requestTypeName,
			CountyId: parseInt($("#countyDropdown").val()),
			DistrictId: 1,
			RequestorFirstName: $("#firstNameTextBox").val(),
			RequestorLastName: $("#lastNameTextBox").val(),
			RequestorAddress: $("#mailingAddressTextBox").val(),
			RequestorCity: $("#cityTextBox").val(),
			RequestorZipCode: $("#zipCodeTextBox").val(),
			RequestorState: $("#stateTextBox").val(),
			RequestorPhoneNumber: $("#phoneNumberTextBox").val(),
			Longitude: $("#longitudeTextBox").val(),
			Latitude: $("#latitudeTextBox").val(),
			ConstructionStartDate: new Date($("#constructionStartDateDatePicker").val()),
			LitigationFlag: $("#litigationRadio").data("kendoRadioGroup").value(),
			ConstructionFlag: $("#constructRadio").data("kendoRadioGroup").value(),
			StateRepresentativeName: $("#stateRepNameTextBox").val(),
			StateRepresentativePhoneNumber: $("#stateRepPhoneTextBox").val(),
			// OtherConditions: null,
			// VarianceOneFlag: false,
			// VarianceTwoFlag: false,
			// VarianceJustification: null,
			// VarianceDenialOneFlag: false,
			// VarianceDenialTwoFlag: false,
			// RequiresTraffic: false,
			// RequiresTPD: false,
			Attachments: []
		}

		var attachmentName = '';
		
		for (var i = 1; i <= cloneCount; i++) {
			if ($('#files-form-' + i).length > 0) {
				
				files = $("#files-" + i).data("kendoUpload").getFiles();

				// if length = 0, then the files (upload control) was not edited, the file is the same as when the record was loaded
				if (files.length != 0) { 
					fileName = files[0].name;

					permitRequest.Attachments.push({
						Name: fileName,
						AttachmentTypeId: $("#document-type-" + i).val(),
						Comment: $("#comment-" + i).val() != '' ? $("#comment-" + i).val() : null
					});
				}
			}
		}
		//alert(JSON.stringify(permitRequest));
		return permitRequest;
	}

	// Get values from controls in request form to send them for creating or updating ****************************************************************************
	function GetPermitRequestResidentialData() { 
		var permitRequestResidential = {
			PermitRequestResidentialId: permitRequestResidentialId,
			PipeLength: $("#lengthPipeTextbox").val(),
			DrivewayWidth: $("#drivewayWidthTextbox").val(),
			DistanceToCenter: $("#distanceDrainageTextbox").val(),
			DistanceFromEdge: $("#distancePavementTextbox").val(),
			RadiusOne: $("#radiusOneTextbox").val(),
			RadiusTwo: $("#radiusTwoTextbox").val(),
			DrainagePipe: $("#drivewayPipeTextbox").val(),
			DrainageStructure: $("#drainageStructureTextbox").val(),
			WidthGate: $("#setBackTextbox").val(),
			WidthROW: $("#widthROWTextbox").val(),
			ThroatLength: $("#throatLengthTextbox").val(),
		};
		//alert(JSON.stringify(permitRequestResidential));
		return permitRequestResidential;
	}

	// Function that loads the existing permit request record (used for external user edit) ********************************************************************
	function loadPermitRequestRecord() { 
		var jsonResult;

		$.ajax({
			type: 'GET',
			url: '/NewRequest/ReadPermitRequests',
			contentType: 'application/json; charset=utf-8',
			data: { id: permitRequestId },
			success: function (result) {
				//fnShowMessage("Notification sent", "Success");
				jsonResult = jQuery.parseJSON(result);
			},
			error: function (xhr, textStatus, errorThrown) {
				fnShowMessage(xhr.responseText, "Error");
			},
			complete: function () {
				loadPermitRequestData(jsonResult);
			}
		});
	}

	// Function that loads the data of an existing permit request record (used for external user edit) ***********************************************************
	function loadPermitRequestData(jsonResult) {
		requestTypeName = jsonResult[0].RequestType;
		$("#highwayNumberDropdown").data("kendoDropDownList").value(jsonResult[0].HighwayId);
		$("#constructionTypesDropdown").data("kendoDropDownList").value(jsonResult[0].ConstructionTypeId);
		$("#highwayPrefixDropdown").data("kendoDropDownList").value(jsonResult[0].HighwayPrefixId);
		$("#countyDropdown").data("kendoDropDownList").value(jsonResult[0].CountyId);
		$("#firstNameTextBox").data("kendoTextBox").value(jsonResult[0].RequestorFirstName);
		$("#lastNameTextBox").data("kendoTextBox").value(jsonResult[0].RequestorLastName);
		$("#mailingAddressTextBox").data("kendoTextBox").value(jsonResult[0].RequestorAddress);
		$("#cityTextBox").data("kendoTextBox").value(jsonResult[0].RequestorCity);
		$("#zipCodeTextBox").data("kendoTextBox").value(jsonResult[0].RequestorZipCode);
		$("#stateTextBox").data("kendoTextBox").value(jsonResult[0].RequestorState);
		$("#phoneNumberTextBox").data("kendoTextBox").value(jsonResult[0].RequestorPhoneNumber);
		$("#longitudeTextBox").data("kendoTextBox").value(jsonResult[0].Longitude);
		$("#latitudeTextBox").data("kendoTextBox").value(jsonResult[0].Latitude);
		$("#constructionStartDateDatePicker").data("kendoDatePicker").value(jsonResult[0].ConstructionStartDate);
		$("#litigationRadio").data("kendoRadioGroup").value(jsonResult[0].LitigationFlag);
		$("#authorizesTextBox").data("kendoTextBox").value(jsonResult[0].RequestorFirstName + " " + jsonResult[0].RequestorLastName);
		$("#constructRadio").data("kendoRadioGroup").value(jsonResult[0].ConstructionFlag);
		$("#stateRepNameTextBox").data("kendoTextBox").value(jsonResult[0].StateRepresentativeName);
		$("#stateRepPhoneTextBox").data("kendoTextBox").value(jsonResult[0].StateRepresentativePhoneNumber);
		$("#lengthPipeTextbox").data("kendoTextBox").value(jsonResult[0].PipeLength);
		$("#drivewayWidthTextbox").data("kendoTextBox").value(jsonResult[0].DrivewayWidth);
		$("#distanceDrainageTextbox").data("kendoTextBox").value(jsonResult[0].DistanceToCenter);
		$("#distancePavementTextbox").data("kendoTextBox").value(jsonResult[0].DistanceFromEdge);
		$("#radiusOneTextbox").data("kendoTextBox").value(jsonResult[0].RadiusOne);
		$("#radiusTwoTextbox").data("kendoTextBox").value(jsonResult[0].RadiusTwo);
		$("#drivewayPipeTextbox").data("kendoTextBox").value(jsonResult[0].DrainagePipe);
		$("#drainageStructureTextbox").data("kendoTextBox").value(jsonResult[0].DrainageStructure);
		$("#setBackTextbox").data("kendoTextBox").value(jsonResult[0].WidthGate);
		$("#widthROWTextbox").data("kendoTextBox").value(jsonResult[0].WidthROW);
		$("#throatLengthTextbox").data("kendoTextBox").value(jsonResult[0].ThroatLength);
		
		// Get attachments
		loadPermitRequestAttachments(jsonResult[0].Attachments);
	}

	// Function that loads the attachments of an existing permit request record (used for external user edit) ***********************************************************
	function loadPermitRequestAttachments(attachments) { 
		
		var controlVal;

		for (var i = 1; i <= attachments.length; i++) {
			addSegment(attachments[i - 1].AttachmentName);
		}

		for (var i = 1; i <= attachments.length; i++) {
			controlVal = attachments[i - 1].AttachmentTypeId;
			$("#document-type-" + i).data("kendoDropDownList").value(controlVal);

			// Kendo Upload control info should be initialized here.
			// However, Telerik requires that initialization must be done at the time the control is created.
			// This is all done in addSegment function.

			controlVal = attachments[i - 1].AttachmentComment;
			$("#comment-" + i).data("kendoTextArea").value(controlVal);
		}
	}
</script>